/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ReservationImport } from './routes/reservation'
import { Route as OrderImport } from './routes/order'
import { Route as MenuImport } from './routes/menu'
import { Route as BookingConfirmedImport } from './routes/booking-confirmed'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ReservationRoute = ReservationImport.update({
  id: '/reservation',
  path: '/reservation',
  getParentRoute: () => rootRoute,
} as any)

const OrderRoute = OrderImport.update({
  id: '/order',
  path: '/order',
  getParentRoute: () => rootRoute,
} as any)

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const BookingConfirmedRoute = BookingConfirmedImport.update({
  id: '/booking-confirmed',
  path: '/booking-confirmed',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/booking-confirmed': {
      id: '/booking-confirmed'
      path: '/booking-confirmed'
      fullPath: '/booking-confirmed'
      preLoaderRoute: typeof BookingConfirmedImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/order': {
      id: '/order'
      path: '/order'
      fullPath: '/order'
      preLoaderRoute: typeof OrderImport
      parentRoute: typeof rootRoute
    }
    '/reservation': {
      id: '/reservation'
      path: '/reservation'
      fullPath: '/reservation'
      preLoaderRoute: typeof ReservationImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/booking-confirmed': typeof BookingConfirmedRoute
  '/menu': typeof MenuRoute
  '/order': typeof OrderRoute
  '/reservation': typeof ReservationRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/booking-confirmed': typeof BookingConfirmedRoute
  '/menu': typeof MenuRoute
  '/order': typeof OrderRoute
  '/reservation': typeof ReservationRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/booking-confirmed': typeof BookingConfirmedRoute
  '/menu': typeof MenuRoute
  '/order': typeof OrderRoute
  '/reservation': typeof ReservationRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/booking-confirmed'
    | '/menu'
    | '/order'
    | '/reservation'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/booking-confirmed'
    | '/menu'
    | '/order'
    | '/reservation'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/booking-confirmed'
    | '/menu'
    | '/order'
    | '/reservation'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  BookingConfirmedRoute: typeof BookingConfirmedRoute
  MenuRoute: typeof MenuRoute
  OrderRoute: typeof OrderRoute
  ReservationRoute: typeof ReservationRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  BookingConfirmedRoute: BookingConfirmedRoute,
  MenuRoute: MenuRoute,
  OrderRoute: OrderRoute,
  ReservationRoute: ReservationRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/booking-confirmed",
        "/menu",
        "/order",
        "/reservation"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/booking-confirmed": {
      "filePath": "booking-confirmed.tsx"
    },
    "/menu": {
      "filePath": "menu.tsx"
    },
    "/order": {
      "filePath": "order.tsx"
    },
    "/reservation": {
      "filePath": "reservation.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
